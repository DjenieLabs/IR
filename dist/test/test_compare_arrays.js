"use strict";var assert=require("assert"),requirejs=require("requirejs");requirejs.config({baseUrl:__dirname+"/../libs/",catchError:!0});var Decoder=requirejs("protocol-decoder"),RAW=requirejs("RAW");describe("IR.Decoder",function(){it("Checks the SAMSUNG protocol decoder",function(e){var r=[4590,4335,510,510,510,510,510,510,510,510,510,1530,510,1530,510,510,510,510,510,1530,510,1530,510,1530,510,1530,510,510,510,510,510,510,510,510,510,4335,510,510,510,510,510,510,510,510,510,1530,510,1530,510,1530,510,510,510,1530,510,1530,510,1530,510,510,510,510,510,510,510,510,510,1530,510,510,510,510,510,510,510,1530,510],a=[4509,4410,586,409,533,462,559,436,529,465,555,1430,560,1426,559,435,560,435,534,1452,559,1431,555,1430,560,1425,560,435,560,435,560,435,529,462,559,4398,559,435,534,457,560,435,559,436,559,1426,559,1431,559,1426,560,435,560,1425,586,1404,560,1426,560,435,560,435,555,435,534,461,560,1430,555,435,559,436,559,435,560,1425,560],s=[4534,4383,560,435,559,435,534,461,559,431,559,1430,559,1426,559,436,559,435,560,1425,560,1429,534,1451,559,1430,560,435,555,435,559,436,559,435,559,4392,560,435,559,436,559,436,533,457,559,1430,560,1426,559,1430,559,431,559,1430,534,1451,559,1430,560,435,529,461,560,435,559,436,559,1430,529,461,559,435,560,435,559,1425,559],o=[4508,4410,559,435,560,435,529,465,555,435,560,1429,533,1452,559,436,533,461,534,1451,560,1430,528,1456,560,1429,530,465,529,461,559,435,560,436,559,4397,555,435,534,461,559,436,533,461,529,1456,560,1429,530,1456,533,461,534,1455,555,1430,560,1430,529,461,559,436,533,461,559,435,556,1429,559,435,534,461,559,436,529,1455,560],c=Decoder.analyse(r).code,t=[4534,4382,560,435,559,436,559,435,559,431,533,1456,559,1426,559,436,533,461,559,1430,559,1426,559,1429,560,1425,559,435,560,435,585,409,533,457,534,4422,559,435,534,461,559,431,560,435,560,435,560,435,559,435,534,1451,559,1430,534,1451,559,1430,559,431,559,1430,559,1430,533,1452,559,435,559,436,533,457,563,431,559,1430,585],d=[4506,4408,560,435,559,435,534,461,555,434,534,1455,560,1425,559,436,533,461,559,1425,560,1429,559,1425,534,1455,533,461,534,461,555,435,559,435,560,4396,533,461,555,435,559,436,559,435,534,457,559,436,559,435,534,1450,564,1425,559,1425,560,1430,559,435,559,1425,560,1429,559,1426,559,435,560,435,559,431,559,435,559,1430,533],u=[4533,4383,559,435,560,435,559,431,560,435,559,1430,559,1426,559,435,559,435,560,1425,560,1429,560,1429,560,1425,559,435,560,435,559,435,560,430,560,4395,560,435,559,435,559,431,534,461,559,435,559,436,559,435,534,1451,560,1430,559,1426,564,1425,559,435,534,1451,560,1429,560,1425,559,436,559,435,560,435,555,435,560,1430,559],q=[4511,4409,533,461,533,462,554,440,555,435,560,1430,533,1452,559,435,533,461,534,1452,559,1430,559,1425,534,1455,560,435,529,461,559,435,560,435,559,4396,559,436,555,435,559,435,560,435,533,461,529,466,555,435,560,1430,555,1429,560,1429,560,1425,559,435,559,1430,559,1425,533,1456,533,461,555,435,560,435,559,435,560,1429,529],l=Decoder.analyse(t).code;assert.equal(Decoder.compareRawArrays(r,a),!0),assert.equal(Decoder.compareRawArrays(a,s),!0),assert.equal(Decoder.compareRawArrays(s,o),!0),assert.equal(Decoder.compareRawArrays(t,d),!0),assert.equal(Decoder.compareRawArrays(d,u),!0),assert.equal(Decoder.compareRawArrays(u,q),!0),assert.notEqual(c,l),assert.equal(Decoder.compareRawArrays(r,t),!1),assert.equal(Decoder.compareRawArrays(a,d),!1),assert.equal(Decoder.compareRawArrays(s,u),!1),assert.equal(Decoder.compareRawArrays(o,q),!1),e()})});